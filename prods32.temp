AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:

  # IAM Role for Lambda@Edge functions
  EdgeLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /service-role/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayFullAccess
      Policies:
        - PolicyName: prods32-Lambda-S3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource:
                  - arn:aws:s3:::prods32
                  - arn:aws:s3:::prods32/*

  # Required CloudFront Origin Access Identity
  OriginAccessId:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: OriginAccess for prods32

  # Bucket Policy for existing bucket
  ImageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: prods32
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontReadAccess
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: arn:aws:s3:::prods32/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessId}

  # Optional Logging Bucket (can remove if not needed)
  CloudFrontLoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: prods32-cflogs
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter

  # Lambda function for viewer-request
  UriToS3KeyFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: prods32-UriToS3Key
      AutoPublishAlias: live
      CodeUri: s3://image-flex-490004636133-staging-deploy/5f6e7147ca3be377979db349a8a678f4
      Handler: index.handler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 1
      Role: !GetAtt EdgeLambdaRole.Arn

  # Lambda function for origin-response
  GetOrCreateImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: prods32-GetOrCreateImage
      AutoPublishAlias: live
      CodeUri: s3://image-flex-490004636133-staging-deploy/2f4164247906723535da2dd44e0ba8f3
      Handler: index.handler
      Runtime: nodejs16.x
      MemorySize: 256
      Timeout: 30
      Role: !GetAtt EdgeLambdaRole.Arn

  # CloudFront distribution
  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: CloudFront distribution for prods32
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        Origins:
          - DomainName: prods32.s3.amazonaws.com
            Id: prods32
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessId}
        DefaultCacheBehavior:
          TargetOriginId: prods32
          ViewerProtocolPolicy: allow-all
          Compress: true
          MinTTL: 100
          ForwardedValues:
            QueryString: true
            QueryStringCacheKeys:
              - w
              - h
              - f
            Cookies:
              Forward: none
            Headers:
              - Access-Control-Request-Method
              - Access-Control-Request-Headers
              - Origin
          LambdaFunctionAssociations:
            - EventType: viewer-request
              LambdaFunctionARN: !Ref UriToS3KeyFunction.Version
            - EventType: origin-response
              LambdaFunctionARN: !Ref GetOrCreateImageFunction.Version
        Logging:
          Bucket: !GetAtt CloudFrontLoggingBucket.DomainName
        PriceClass: PriceClass_All

Outputs:
  DistributionDomain:
    Description: CloudFront distribution domain
    Value: !GetAtt Distribution.DomainName

  UriToS3KeyFunctionOutput:
    Description: Lambda function for the CloudFront viewer-request event
    Value: !Ref UriToS3KeyFunction

  GetOrCreateImageFunctionOutput:
    Description: Lambda function for the CloudFront origin-response event
    Value: !Ref GetOrCreateImageFunction
